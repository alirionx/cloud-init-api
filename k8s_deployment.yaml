apiVersion: v1
kind: Namespace
metadata:
  name: cloud-automation

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-init-api
  namespace: cloud-automation
  labels:
    app: cloud-init-api
spec:
  selector:
    matchLabels:
      app: cloud-init-api
  replicas: 4
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cloud-init-api
    spec:
      containers:
      - name: cloud-init-api
        image: ghcr.io/alirionx/cloud-init-api:latest
        # env:
        # - name: DB_HOST
        #   value: DB_HOST
        ports:
        - containerPort: 5000
          name: cloud-init-api
        volumeMounts:
        - name: cloud-init-api-data
          mountPath: /app/data
      volumes:
        - name: cloud-init-api-data
          persistentVolumeClaim:
            claimName: cloud-init-api-pvc
      restartPolicy: Always

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cloud-init-api-pvc
  namespace: cloud-automation
  labels:
    app: cloud-init-api
spec:
  storageClassName: longhorn
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  name: cloud-init-api-srv
  namespace: cloud-automation
spec:
  selector:
    app: cloud-init-api
  type: ClusterIP
  # sessionAffinity: None
  # sessionAffinityConfig:
  #   clientIP:
  #     timeoutSeconds: 10800
  ports:
  - name: cloud-init-api
    protocol: TCP
    port: 5000
    targetPort: 5000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloud-init-api-ingress
  namespace: cloud-automation
spec:
  tls:
  - hosts:
      - cloudinit.YOURDOMAIN
    secretName: YOURDOMAIN-tls
  rules:
  - host: cloudinit.YOURDOMAIN
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: cloud-init-api-srv
              port:
                number: 5000

